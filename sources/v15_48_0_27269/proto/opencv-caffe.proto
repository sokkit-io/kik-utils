syntax = "proto2";

package opencv_caffe;

message BlobShape {
    repeated int64 dim = 1 [packed = true];
}

message BlobProto {
    optional BlobShape shape = 7;
    repeated float data = 5 [packed = true];
    repeated float diff = 6 [packed = true];
    repeated double double_data = 8 [packed = true];
    repeated double double_diff = 9 [packed = true];
    optional Type raw_data_type = 10;
    optional bytes raw_data = 12 [packed = false];
    optional int32 num = 1 [default = 0];
    optional int32 channels = 2 [default = 0];
    optional int32 height = 3 [default = 0];
    optional int32 width = 4 [default = 0];
}

message BlobProtoVector {
    repeated BlobProto blobs = 1;
}

message PermuteParameter {
    repeated uint32 order = 1;
}

message NormalizeBBoxParameter {
    optional bool across_spatial = 1 [default = true];
    optional FillerParameter scale_filler = 2;
    optional bool channel_shared = 3 [default = true];
    optional float eps = 4 [default = 1e-10];
}

message PriorBoxParameter {
    optional float min_size = 1;
    optional float max_size = 2;
    repeated float aspect_ratio = 3;
    optional bool flip = 4 [default = true];
    optional bool clip = 5 [default = true];
    repeated float variance = 6;
    optional uint32 img_size = 7;
    optional uint32 img_h = 8;
    optional uint32 img_w = 9;
    optional float step = 10;
    optional float step_h = 11;
    optional float step_w = 12;
    optional float offset = 13 [default = 0.5];
    repeated float offset_h = 14;
    repeated float offset_w = 15;
    repeated float width = 16;
    repeated float height = 17;
    
    enum CodeType {
        CORNER = 1;
        CENTER_SIZE = 2;
    }
}

message DetectionOutputParameter {
    optional uint32 num_classes = 1;
    optional bool share_location = 2 [default = true];
    optional int32 background_label_id = 3 [default = 0];
    optional NonMaximumSuppressionParameter nms_param = 4;
    optional SaveOutputParameter save_output_param = 5;
    optional PriorBoxParameter.CodeType code_type = 6 [default = CORNER];
    optional bool variance_encoded_in_target = 8 [default = false];
    optional int32 keep_top_k = 7 [default = -1];
    optional float confidence_threshold = 9;
    optional bool normalized_bbox = 10 [default = true];
}

message Datum {
    optional int32 channels = 1;
    optional int32 height = 2;
    optional int32 width = 3;
    optional bytes data = 4;
    optional int32 label = 5;
    repeated float float_data = 6;
    optional bool encoded = 7 [default = false];
}

message FillerParameter {
    optional string type = 1 [default = "constant"];
    optional float value = 2 [default = 0];
    optional float min = 3 [default = 0];
    optional float max = 4 [default = 1];
    optional float mean = 5 [default = 0];
    optional float std = 6 [default = 1];
    optional int32 sparse = 7 [default = -1];
    
    optional VarianceNorm variance_norm = 8 [default = FAN_IN];
    enum VarianceNorm {
        FAN_IN = 0;
        FAN_OUT = 1;
        AVERAGE = 2;
    }
}

message NetParameter {
    optional string name = 1;
    repeated string input = 3;
    repeated BlobShape input_shape = 8;
    repeated int32 input_dim = 4;
    optional bool force_backward = 5 [default = false];
    optional NetState state = 6;
    optional bool debug_info = 7 [default = false];
    repeated LayerParameter layer = 100;
    repeated V1LayerParameter layers = 2;
}

message SolverParameter {
    optional string net = 24;
    optional NetParameter net_param = 25;
    optional string train_net = 1;
    repeated string test_net = 2;
    optional NetParameter train_net_param = 21;
    repeated NetParameter test_net_param = 22;
    optional NetState train_state = 26;
    repeated NetState test_state = 27;
    repeated int32 test_iter = 3;
    optional int32 test_interval = 4 [default = 0];
    optional bool test_compute_loss = 19 [default = false];
    optional bool test_initialization = 32 [default = true];
    optional float base_lr = 5;
    optional int32 display = 6;
    optional int32 average_loss = 33 [default = 1];
    optional int32 max_iter = 7;
    optional int32 iter_size = 36 [default = 1];
    optional string lr_policy = 8;
    optional float gamma = 9;
    optional float power = 10;
    optional float momentum = 11;
    optional float weight_decay = 12;
    optional string regularization_type = 29 [default = "L2"];
    optional int32 stepsize = 13;
    repeated int32 stepvalue = 34;
    optional float clip_gradients = 35 [default = -1];
    optional int32 snapshot = 14 [default = 0];
    optional string snapshot_prefix = 15;
    optional bool snapshot_diff = 16 [default = false];
    
    optional SnapshotFormat snapshot_format = 37 [default = BINARYPROTO];
    enum SnapshotFormat {
        HDF5 = 0;
        BINARYPROTO = 1;
    }
    
    optional SolverMode solver_mode = 17 [default = GPU];
    enum SolverMode {
        CPU = 0;
        GPU = 1;
    }
    
    optional int32 device_id = 18 [default = 0];
    optional int64 random_seed = 20 [default = -1];
    optional string type = 40 [default = "SGD"];
    optional float delta = 31 [default = 1e-08];
    optional float momentum2 = 39 [default = 0.999];
    optional float rms_decay = 38 [default = 0.99];
    optional bool debug_info = 23 [default = false];
    optional bool snapshot_after_train = 28 [default = true];
    
    optional SolverType solver_type = 30 [default = SGD];
    enum SolverType {
        SGD = 0;
        NESTEROV = 1;
        ADAGRAD = 2;
        RMSPROP = 3;
        ADADELTA = 4;
        ADAM = 5;
    }
}

message SolverState {
    optional int32 iter = 1;
    optional string learned_net = 2;
    repeated BlobProto history = 3;
    optional int32 current_step = 4 [default = 0];
}

message NetState {
    optional Phase phase = 1 [default = TEST];
    optional int32 level = 2 [default = 0];
    repeated string stage = 3;
}

message NetStateRule {
    optional Phase phase = 1;
    optional int32 min_level = 2;
    optional int32 max_level = 3;
    repeated string stage = 4;
    repeated string not_stage = 5;
}

message ParamSpec {
    optional string name = 1;
    
    optional DimCheckMode share_mode = 2;
    enum DimCheckMode {
        STRICT = 0;
        PERMISSIVE = 1;
    }
    
    optional float lr_mult = 3 [default = 1];
    optional float decay_mult = 4 [default = 1];
}

message LayerParameter {
    optional string name = 1;
    optional string type = 2;
    repeated string bottom = 3;
    repeated string top = 4;
    optional Phase phase = 10;
    repeated float loss_weight = 5;
    repeated ParamSpec param = 6;
    repeated BlobProto blobs = 7;
    repeated bool propagate_down = 11;
    repeated NetStateRule include = 8;
    repeated NetStateRule exclude = 9;
    optional TransformationParameter transform_param = 100;
    optional LossParameter loss_param = 101;
    optional AccuracyParameter accuracy_param = 102;
    optional ArgMaxParameter argmax_param = 103;
    optional BatchNormParameter batch_norm_param = 139;
    optional BiasParameter bias_param = 141;
    optional ConcatParameter concat_param = 104;
    optional ContrastiveLossParameter contrastive_loss_param = 105;
    optional ConvolutionParameter convolution_param = 106;
    optional CropParameter crop_param = 144;
    optional DataParameter data_param = 107;
    optional DetectionOutputParameter detection_output_param = 147;
    optional DropoutParameter dropout_param = 108;
    optional DummyDataParameter dummy_data_param = 109;
    optional EltwiseParameter eltwise_param = 110;
    optional ELUParameter elu_param = 140;
    optional EmbedParameter embed_param = 137;
    optional ExpParameter exp_param = 111;
    optional FlattenParameter flatten_param = 135;
    optional HDF5DataParameter hdf5_data_param = 112;
    optional HDF5OutputParameter hdf5_output_param = 113;
    optional HingeLossParameter hinge_loss_param = 114;
    optional ImageDataParameter image_data_param = 115;
    optional InfogainLossParameter infogain_loss_param = 116;
    optional InnerProductParameter inner_product_param = 117;
    optional InputParameter input_param = 143;
    optional LogParameter log_param = 134;
    optional LRNParameter lrn_param = 118;
    optional MemoryDataParameter memory_data_param = 119;
    optional MVNParameter mvn_param = 120;
    optional NormalizeBBoxParameter norm_param = 149;
    optional PermuteParameter permute_param = 148;
    optional ParameterParameter parameter_param = 145;
    optional PoolingParameter pooling_param = 121;
    optional PowerParameter power_param = 122;
    optional PReLUParameter prelu_param = 131;
    optional PriorBoxParameter prior_box_param = 150;
    optional ProposalParameter proposal_param = 201;
    optional PSROIPoolingParameter psroi_pooling_param = 10002;
    optional PythonParameter python_param = 130;
    optional RecurrentParameter recurrent_param = 146;
    optional ReductionParameter reduction_param = 136;
    optional ReLUParameter relu_param = 123;
    optional ReshapeParameter reshape_param = 133;
    optional ROIPoolingParameter roi_pooling_param = 8266711;
    optional ScaleParameter scale_param = 142;
    optional SigmoidParameter sigmoid_param = 124;
    optional SoftmaxParameter softmax_param = 125;
    optional SPPParameter spp_param = 132;
    optional SliceParameter slice_param = 126;
    optional TanHParameter tanh_param = 127;
    optional ThresholdParameter threshold_param = 128;
    optional TileParameter tile_param = 138;
    optional WindowDataParameter window_data_param = 129;
}

message TransformationParameter {
    optional float scale = 1 [default = 1];
    optional bool mirror = 2 [default = false];
    optional uint32 crop_size = 3 [default = 0];
    optional string mean_file = 4;
    repeated float mean_value = 5;
    optional bool force_color = 6 [default = false];
    optional bool force_gray = 7 [default = false];
}

message LossParameter {
    optional int32 ignore_label = 1;
    
    optional NormalizationMode normalization = 3 [default = VALID];
    enum NormalizationMode {
        FULL = 0;
        VALID = 1;
        BATCH_SIZE = 2;
        NONE = 3;
    }
    
    optional bool normalize = 2;
}

message AccuracyParameter {
    optional uint32 top_k = 1 [default = 1];
    optional int32 axis = 2 [default = 1];
    optional int32 ignore_label = 3;
}

message ArgMaxParameter {
    optional bool out_max_val = 1 [default = false];
    optional uint32 top_k = 2 [default = 1];
    optional int32 axis = 3;
}

message ConcatParameter {
    optional int32 axis = 2 [default = 1];
    optional uint32 concat_dim = 1 [default = 1];
}

message BatchNormParameter {
    optional bool use_global_stats = 1;
    optional float moving_average_fraction = 2 [default = 0.999];
    optional float eps = 3 [default = 1e-05];
    optional bool scale_bias = 7 [default = false];
}

message BiasParameter {
    optional int32 axis = 1 [default = 1];
    optional int32 num_axes = 2 [default = 1];
    optional FillerParameter filler = 3;
}

message ContrastiveLossParameter {
    optional float margin = 1 [default = 1];
    optional bool legacy_version = 2 [default = false];
}

message ConvolutionParameter {
    optional uint32 num_output = 1;
    optional bool bias_term = 2 [default = true];
    repeated uint32 pad = 3;
    repeated uint32 kernel_size = 4;
    repeated uint32 stride = 6;
    repeated uint32 dilation = 18;
    optional uint32 pad_h = 9 [default = 0];
    optional uint32 pad_w = 10 [default = 0];
    optional uint32 kernel_h = 11;
    optional uint32 kernel_w = 12;
    optional uint32 stride_h = 13;
    optional uint32 stride_w = 14;
    optional uint32 group = 5 [default = 1];
    optional FillerParameter weight_filler = 7;
    optional FillerParameter bias_filler = 8;
    
    optional Engine engine = 15 [default = DEFAULT];
    enum Engine {
        DEFAULT = 0;
        CAFFE = 1;
        CUDNN = 2;
    }
    
    optional int32 axis = 16 [default = 1];
    optional bool force_nd_im2col = 17 [default = false];
}

message CropParameter {
    optional int32 axis = 1 [default = 2];
    repeated uint32 offset = 2;
}

message DataParameter {
    optional string source = 1;
    optional uint32 batch_size = 4;
    optional uint32 rand_skip = 7 [default = 0];
    
    optional DB backend = 8 [default = LEVELDB];
    enum DB {
        LEVELDB = 0;
        LMDB = 1;
    }
    
    optional float scale = 2 [default = 1];
    optional string mean_file = 3;
    optional uint32 crop_size = 5 [default = 0];
    optional bool mirror = 6 [default = false];
    optional bool force_encoded_color = 9 [default = false];
    optional uint32 prefetch = 10 [default = 4];
}

message NonMaximumSuppressionParameter {
    optional float nms_threshold = 1 [default = 0.3];
    optional int32 top_k = 2;
    optional float eta = 3 [default = 1];
}

message SaveOutputParameter {
    optional string output_directory = 1;
    optional string output_name_prefix = 2;
    optional string output_format = 3;
    optional string label_map_file = 4;
    optional string name_size_file = 5;
    optional uint32 num_test_image = 6;
}

message DropoutParameter {
    optional float dropout_ratio = 1 [default = 0.5];
    optional bool scale_train = 2 [default = true];
}

message DummyDataParameter {
    repeated FillerParameter data_filler = 1;
    repeated BlobShape shape = 6;
    repeated uint32 num = 2;
    repeated uint32 channels = 3;
    repeated uint32 height = 4;
    repeated uint32 width = 5;
}

message EltwiseParameter {
    optional EltwiseOp operation = 1 [default = SUM];
    enum EltwiseOp {
        PROD = 0;
        SUM = 1;
        MAX = 2;
    }
    
    repeated float coeff = 2;
    optional bool stable_prod_grad = 3 [default = true];
}

message ELUParameter {
    optional float alpha = 1 [default = 1];
}

message EmbedParameter {
    optional uint32 num_output = 1;
    optional uint32 input_dim = 2;
    optional bool bias_term = 3 [default = true];
    optional FillerParameter weight_filler = 4;
    optional FillerParameter bias_filler = 5;
}

message ExpParameter {
    optional float base = 1 [default = -1];
    optional float scale = 2 [default = 1];
    optional float shift = 3 [default = 0];
}

message FlattenParameter {
    optional int32 axis = 1 [default = 1];
    optional int32 end_axis = 2 [default = -1];
}

message HDF5DataParameter {
    optional string source = 1;
    optional uint32 batch_size = 2;
    optional bool shuffle = 3 [default = false];
}

message HDF5OutputParameter {
    optional string file_name = 1;
}

message HingeLossParameter {
    optional Norm norm = 1 [default = L1];
    enum Norm {
        L1 = 1;
        L2 = 2;
    }
}

message ImageDataParameter {
    optional string source = 1;
    optional uint32 batch_size = 4 [default = 1];
    optional uint32 rand_skip = 7 [default = 0];
    optional bool shuffle = 8 [default = false];
    optional uint32 new_height = 9 [default = 0];
    optional uint32 new_width = 10 [default = 0];
    optional bool is_color = 11 [default = true];
    optional float scale = 2 [default = 1];
    optional string mean_file = 3;
    optional uint32 crop_size = 5 [default = 0];
    optional bool mirror = 6 [default = false];
    optional string root_folder = 12;
}

message InfogainLossParameter {
    optional string source = 1;
}

message InnerProductParameter {
    optional uint32 num_output = 1;
    optional bool bias_term = 2 [default = true];
    optional FillerParameter weight_filler = 3;
    optional FillerParameter bias_filler = 4;
    optional int32 axis = 5 [default = 1];
    optional bool transpose = 6 [default = false];
}

message InputParameter {
    repeated BlobShape shape = 1;
}

message LogParameter {
    optional float base = 1 [default = -1];
    optional float scale = 2 [default = 1];
    optional float shift = 3 [default = 0];
}

message LRNParameter {
    optional uint32 local_size = 1 [default = 5];
    optional float alpha = 2 [default = 1];
    optional float beta = 3 [default = 0.75];
    
    optional NormRegion norm_region = 4 [default = ACROSS_CHANNELS];
    enum NormRegion {
        ACROSS_CHANNELS = 0;
        WITHIN_CHANNEL = 1;
    }
    
    optional float k = 5 [default = 1];
    
    optional Engine engine = 6 [default = DEFAULT];
    enum Engine {
        DEFAULT = 0;
        CAFFE = 1;
        CUDNN = 2;
    }
}

message MemoryDataParameter {
    optional uint32 batch_size = 1;
    optional uint32 channels = 2;
    optional uint32 height = 3;
    optional uint32 width = 4;
}

message MVNParameter {
    optional bool normalize_variance = 1 [default = true];
    optional bool across_channels = 2 [default = false];
    optional float eps = 3 [default = 1e-09];
}

message ParameterParameter {
    optional BlobShape shape = 1;
}

message PoolingParameter {
    optional PoolMethod pool = 1 [default = MAX];
    enum PoolMethod {
        MAX = 0;
        AVE = 1;
        STOCHASTIC = 2;
    }
    
    optional uint32 pad = 4 [default = 0];
    optional uint32 pad_h = 9 [default = 0];
    optional uint32 pad_w = 10 [default = 0];
    optional uint32 kernel_size = 2;
    optional uint32 kernel_h = 5;
    optional uint32 kernel_w = 6;
    optional uint32 stride = 3 [default = 1];
    optional uint32 stride_h = 7;
    optional uint32 stride_w = 8;
    
    optional Engine engine = 11 [default = DEFAULT];
    enum Engine {
        DEFAULT = 0;
        CAFFE = 1;
        CUDNN = 2;
    }
    
    optional bool global_pooling = 12 [default = false];
    optional bool ceil_mode = 13 [default = true];
}

message PowerParameter {
    optional float power = 1 [default = 1];
    optional float scale = 2 [default = 1];
    optional float shift = 3 [default = 0];
}

message PythonParameter {
    optional string module = 1;
    optional string layer = 2;
    optional string param_str = 3;
    optional bool share_in_parallel = 4 [default = false];
}

message RecurrentParameter {
    optional uint32 num_output = 1 [default = 0];
    optional FillerParameter weight_filler = 2;
    optional FillerParameter bias_filler = 3;
    optional bool debug_info = 4 [default = false];
    optional bool expose_hidden = 5 [default = false];
}

message ReductionParameter {
    optional ReductionOp operation = 1 [default = SUM];
    enum ReductionOp {
        SUM = 1;
        ASUM = 2;
        SUMSQ = 3;
        MEAN = 4;
    }
    
    optional int32 axis = 2 [default = 0];
    optional float coeff = 3 [default = 1];
}

message ReLUParameter {
    optional float negative_slope = 1 [default = 0];
    
    optional Engine engine = 2 [default = DEFAULT];
    enum Engine {
        DEFAULT = 0;
        CAFFE = 1;
        CUDNN = 2;
    }
}

message ReshapeParameter {
    optional BlobShape shape = 1;
    optional int32 axis = 2 [default = 0];
    optional int32 num_axes = 3 [default = -1];
}

message ScaleParameter {
    optional int32 axis = 1 [default = 1];
    optional int32 num_axes = 2 [default = 1];
    optional FillerParameter filler = 3;
    optional bool bias_term = 4 [default = false];
    optional FillerParameter bias_filler = 5;
}

message SigmoidParameter {
    optional Engine engine = 1 [default = DEFAULT];
    enum Engine {
        DEFAULT = 0;
        CAFFE = 1;
        CUDNN = 2;
    }
}

message SliceParameter {
    optional int32 axis = 3 [default = 1];
    repeated uint32 slice_point = 2;
    optional uint32 slice_dim = 1 [default = 1];
}

message SoftmaxParameter {
    optional Engine engine = 1 [default = DEFAULT];
    enum Engine {
        DEFAULT = 0;
        CAFFE = 1;
        CUDNN = 2;
    }
    
    optional int32 axis = 2 [default = 1];
}

message TanHParameter {
    optional Engine engine = 1 [default = DEFAULT];
    enum Engine {
        DEFAULT = 0;
        CAFFE = 1;
        CUDNN = 2;
    }
}

message TileParameter {
    optional int32 axis = 1 [default = 1];
    optional int32 tiles = 2;
}

message ThresholdParameter {
    optional float threshold = 1 [default = 0];
}

message WindowDataParameter {
    optional string source = 1;
    optional float scale = 2 [default = 1];
    optional string mean_file = 3;
    optional uint32 batch_size = 4;
    optional uint32 crop_size = 5 [default = 0];
    optional bool mirror = 6 [default = false];
    optional float fg_threshold = 7 [default = 0.5];
    optional float bg_threshold = 8 [default = 0.5];
    optional float fg_fraction = 9 [default = 0.25];
    optional uint32 context_pad = 10 [default = 0];
    optional string crop_mode = 11 [default = "warp"];
    optional bool cache_images = 12 [default = false];
    optional string root_folder = 13;
}

message SPPParameter {
    optional uint32 pyramid_height = 1;
    
    optional PoolMethod pool = 2 [default = MAX];
    enum PoolMethod {
        MAX = 0;
        AVE = 1;
        STOCHASTIC = 2;
    }
    
    optional Engine engine = 6 [default = DEFAULT];
    enum Engine {
        DEFAULT = 0;
        CAFFE = 1;
        CUDNN = 2;
    }
}

message V1LayerParameter {
    repeated string bottom = 2;
    repeated string top = 3;
    optional string name = 4;
    repeated NetStateRule include = 32;
    repeated NetStateRule exclude = 33;
    
    optional LayerType type = 5;
    enum LayerType {
        NONE = 0;
        ABSVAL = 35;
        ACCURACY = 1;
        ARGMAX = 30;
        BNLL = 2;
        CONCAT = 3;
        CONTRASTIVE_LOSS = 37;
        CONVOLUTION = 4;
        DATA = 5;
        DECONVOLUTION = 39;
        DROPOUT = 6;
        DUMMY_DATA = 32;
        EUCLIDEAN_LOSS = 7;
        ELTWISE = 25;
        EXP = 38;
        FLATTEN = 8;
        HDF5_DATA = 9;
        HDF5_OUTPUT = 10;
        HINGE_LOSS = 28;
        IM2COL = 11;
        IMAGE_DATA = 12;
        INFOGAIN_LOSS = 13;
        INNER_PRODUCT = 14;
        LRN = 15;
        MEMORY_DATA = 29;
        MULTINOMIAL_LOGISTIC_LOSS = 16;
        MVN = 34;
        POOLING = 17;
        POWER = 26;
        RELU = 18;
        SIGMOID = 19;
        SIGMOID_CROSS_ENTROPY_LOSS = 27;
        SILENCE = 36;
        SOFTMAX = 20;
        SOFTMAX_LOSS = 21;
        SPLIT = 22;
        SLICE = 33;
        TANH = 23;
        WINDOW_DATA = 24;
        THRESHOLD = 31;
    }
    
    repeated BlobProto blobs = 6;
    repeated string param = 1001;
    
    repeated DimCheckMode blob_share_mode = 1002;
    enum DimCheckMode {
        STRICT = 0;
        PERMISSIVE = 1;
    }
    
    repeated float blobs_lr = 7;
    repeated float weight_decay = 8;
    repeated float loss_weight = 35;
    optional AccuracyParameter accuracy_param = 27;
    optional ArgMaxParameter argmax_param = 23;
    optional ConcatParameter concat_param = 9;
    optional ContrastiveLossParameter contrastive_loss_param = 40;
    optional ConvolutionParameter convolution_param = 10;
    optional DataParameter data_param = 11;
    optional DropoutParameter dropout_param = 12;
    optional DummyDataParameter dummy_data_param = 26;
    optional EltwiseParameter eltwise_param = 24;
    optional ExpParameter exp_param = 41;
    optional HDF5DataParameter hdf5_data_param = 13;
    optional HDF5OutputParameter hdf5_output_param = 14;
    optional HingeLossParameter hinge_loss_param = 29;
    optional ImageDataParameter image_data_param = 15;
    optional InfogainLossParameter infogain_loss_param = 16;
    optional InnerProductParameter inner_product_param = 17;
    optional LRNParameter lrn_param = 18;
    optional MemoryDataParameter memory_data_param = 22;
    optional MVNParameter mvn_param = 34;
    optional PoolingParameter pooling_param = 19;
    optional PowerParameter power_param = 21;
    optional ReLUParameter relu_param = 30;
    optional SigmoidParameter sigmoid_param = 38;
    optional SoftmaxParameter softmax_param = 39;
    optional SliceParameter slice_param = 31;
    optional TanHParameter tanh_param = 37;
    optional ThresholdParameter threshold_param = 25;
    optional WindowDataParameter window_data_param = 20;
    optional TransformationParameter transform_param = 36;
    optional LossParameter loss_param = 42;
    optional V0LayerParameter layer = 1;
}

message V0LayerParameter {
    optional string name = 1;
    optional string type = 2;
    optional uint32 num_output = 3;
    optional bool biasterm = 4 [default = true];
    optional FillerParameter weight_filler = 5;
    optional FillerParameter bias_filler = 6;
    optional uint32 pad = 7 [default = 0];
    optional uint32 kernelsize = 8;
    optional uint32 group = 9 [default = 1];
    optional uint32 stride = 10 [default = 1];
    
    optional PoolMethod pool = 11 [default = MAX];
    enum PoolMethod {
        MAX = 0;
        AVE = 1;
        STOCHASTIC = 2;
    }
    
    optional float dropout_ratio = 12 [default = 0.5];
    optional uint32 local_size = 13 [default = 5];
    optional float alpha = 14 [default = 1];
    optional float beta = 15 [default = 0.75];
    optional float k = 22 [default = 1];
    optional string source = 16;
    optional float scale = 17 [default = 1];
    optional string meanfile = 18;
    optional uint32 batchsize = 19;
    optional uint32 cropsize = 20 [default = 0];
    optional bool mirror = 21 [default = false];
    repeated BlobProto blobs = 50;
    repeated float blobs_lr = 51;
    repeated float weight_decay = 52;
    optional uint32 rand_skip = 53 [default = 0];
    optional float det_fg_threshold = 54 [default = 0.5];
    optional float det_bg_threshold = 55 [default = 0.5];
    optional float det_fg_fraction = 56 [default = 0.25];
    optional uint32 det_context_pad = 58 [default = 0];
    optional string det_crop_mode = 59 [default = "warp"];
    optional int32 new_num = 60 [default = 0];
    optional int32 new_channels = 61 [default = 0];
    optional int32 new_height = 62 [default = 0];
    optional int32 new_width = 63 [default = 0];
    optional bool shuffle_images = 64 [default = false];
    optional uint32 concat_dim = 65 [default = 1];
    optional HDF5OutputParameter hdf5_output_param = 1001;
}

message PReLUParameter {
    optional FillerParameter filler = 1;
    optional bool channel_shared = 2 [default = false];
}

message NormalizedBBox {
    optional float xmin = 1;
    optional float ymin = 2;
    optional float xmax = 3;
    optional float ymax = 4;
    optional int32 label = 5;
    optional bool difficult = 6;
    optional float score = 7;
    optional float size = 8;
}

message ROIPoolingParameter {
    optional uint32 pooled_h = 1 [default = 0];
    optional uint32 pooled_w = 2 [default = 0];
    optional float spatial_scale = 3 [default = 1];
}

message ProposalParameter {
    optional uint32 feat_stride = 1 [default = 16];
    optional uint32 base_size = 2 [default = 16];
    optional uint32 min_size = 3 [default = 16];
    repeated float ratio = 4;
    repeated float scale = 5;
    optional uint32 pre_nms_topn = 6 [default = 6000];
    optional uint32 post_nms_topn = 7 [default = 300];
    optional float nms_thresh = 8 [default = 0.7];
}

message PSROIPoolingParameter {
    required float spatial_scale = 1;
    required int32 output_dim = 2;
    required int32 group_size = 3;
}

enum Type {
    DOUBLE = 0;
    FLOAT = 1;
    FLOAT16 = 2;
    INT = 3;
    UINT = 4;
}

enum Phase {
    TRAIN = 0;
    TEST = 1;
}
