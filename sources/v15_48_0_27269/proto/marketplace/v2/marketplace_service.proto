syntax = "proto3";

package mobile.marketplace.v2;

import "protobuf_validation.proto";
import "common/v2/model.proto";
import "messaging/v2/model.proto";
import "marketplace/v2/marketplace_common.proto";
import "kin/transaction/v2/transaction_common.proto";

option go_package = "github.com/kikinteractive/xiphias-api-mobile/generated/go/marketplace/v2;marketplace";
option java_package = "com.kik.gen.marketplace.v2";

service Marketplace {
    rpc GetAllCollections(GetAllCollectionsRequest) returns (GetAllCollectionsResponse);
    rpc GetCollections(GetCollectionsRequest) returns (GetCollectionsResponse);
    rpc GetAllListings(GetAllListingsRequest) returns (GetAllListingsResponse);
    rpc GetListings(GetListingsRequest) returns (GetListingsResponse);
    rpc GetListingsByCategory(GetListingsByCategoryRequest) returns (GetListingsByCategoryResponse);
    rpc ClaimListing(ClaimListingRequest) returns (ClaimListingResponse);
}

message GetAllCollectionsRequest {
    PageToken page_token = 1;
}

message GetAllCollectionsResponse {
    Result result = 1;
    enum Result {
        OK = 0;
    }
    
    repeated common.marketplace.v2.ListingCollection collections = 2;
    PageToken page_token = 3;
}

message GetCollectionsRequest {
    repeated common.marketplace.v2.ListingCollectionId ids = 1;
}

message GetCollectionsResponse {
    Result result = 1;
    enum Result {
        OK = 0;
    }
    
    repeated common.marketplace.v2.ListingCollection collections = 2;
    
    repeated FailureDetails failure_details = 3;
    message FailureDetails {
        common.marketplace.v2.ListingCollectionId collection_id = 1;
        
        Reason reason = 2;
        enum Reason {
            UNKNOWN = 0;
            NOT_FOUND = 1;
        }
    }
}

message GetListingsRequest {
    repeated common.marketplace.v2.ListingId ids = 1;
}

message GetListingsResponse {
    Result result = 1;
    enum Result {
        OK = 0;
    }
    
    repeated common.marketplace.v2.Listing listings = 2;
    
    repeated FailureDetails failure_details = 3;
    message FailureDetails {
        common.marketplace.v2.ListingId listing_id = 1;
        
        Reason reason = 2;
        enum Reason {
            UNKNOWN = 0;
            NOT_FOUND = 1;
        }
    }
}

message GetAllListingsRequest {
    PageToken page_token = 1;
}

message GetAllListingsResponse {
    Result result = 1;
    enum Result {
        OK = 0;
    }
    
    repeated common.marketplace.v2.Listing listings = 2;
    PageToken page_token = 3;
}

message GetListingsByCategoryRequest {
    common.marketplace.v2.ListingCategory listing_category = 1;
    PageToken page_token = 2;
}

message GetListingsByCategoryResponse {
    Result result = 1;
    enum Result {
        OK = 0;
    }
    
    repeated common.marketplace.v2.Listing listings = 2;
    PageToken page_token = 3;
}

message ClaimListingRequest {
    common.marketplace.v2.ListingId listing_id = 1;
    common.kin.transaction.v2.TransactionEnvelope transaction_envelope = 2;
    ClaimContextInfo claim_context_info = 3;
}

message ClaimListingResponse {
    Result result = 1;
    enum Result {
        OK = 0;
        REJECTED = 1;
    }
    
    RejectionReason rejection_reason = 2;
    enum RejectionReason {
        UNKNOWN = 0;
        INVALID_TRANSACTION = 1;
        LISTING_TRANSACTION_MISMATCH = 2;
        LISTING_PREVIOUSLY_CLAIMED = 3;
        LISTING_EXPIRED = 4;
        MAX_SPEND_AMOUNT_EXCEEDED = 5;
        DAILY_SPEND_LIMIT_EXCEEDED = 6;
        DAILY_EARN_LIMIT_EXCEEDED = 7;
        NOT_AUTHORIZED = 8;
        CLAIM_IN_PROGRESS = 9;
    }
    
    common.kin.transaction.v2.TransactionId transaction_id = 3;
}

message PageToken {
    bytes token = 1;
}

message ClaimContextInfo {
    oneof kind {
        ChatMessageInfo chat_message_info = 1;
    }
}

message ChatMessageInfo {
    common.v2.ChatId chat_id = 1;
    common.messaging.v2.Message.Id message_id = 2;
}
