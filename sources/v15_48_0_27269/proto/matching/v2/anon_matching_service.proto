syntax = "proto3";

package mobile.matching.v2;

import "common/v2/model.proto";
import "matching/v2/matching_common.proto";
import "kin/payment/v2/payment_common.proto";
import "protobuf_validation.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/kikinteractive/xiphias-api-mobile/generated/go/matching/v2;matching";
option java_package = "com.kik.gen.matching.v2";

service AnonMatching {
    rpc FindChatPartner(FindChatPartnerRequest) returns (FindChatPartnerResponse);
    rpc CancelFindChatPartner(CancelFindChatPartnerRequest) returns (CancelFindChatPartnerResponse);
    rpc EndChat(EndChatRequest) returns (EndChatResponse);
    rpc DeleteChat(DeleteChatRequest) returns (DeleteChatResponse);
    rpc RateChat(RateChatRequest) returns (RateChatResponse);
    rpc GetRemainingAnonChats(GetRemainingAnonChatsRequest) returns (GetRemainingAnonChatsResponse);
    rpc InitiateFriending(InitiateFriendingRequest) returns (InitiateFriendingResponse);
    rpc GetUserChallengesStats(GetUserChallengesStatsRequest) returns (GetUserChallengesStatsResponse);
    rpc GetInterestList(GetInterestListRequest) returns (GetInterestListResponse);
    rpc GetUserConfig(GetUserConfigRequest) returns (GetUserConfigResponse);
    rpc SetUserConfig(SetUserConfigRequest) returns (SetUserConfigResponse);
}

message FindChatPartnerRequest {
    repeated common.matching.v2.AnonMatchInterest interests = 1;
    string matching_variant = 2;
}

message FindChatPartnerResponse {
    Result result = 1;
    enum Result {
        PARTNER_FOUND = 0;
        IN_QUEUE = 1;
        REJECTED = 2;
        REJECTED_NO_REMAINING_SESSIONS = 3;
        REJECTED_TEMPORARILY_BANNED = 4;
    }
    
    common.v2.Uuid find_chat_request_id = 2;
    google.protobuf.Timestamp rejected_expiry_time = 3;
}

message CancelFindChatPartnerRequest {
    common.v2.Uuid find_chat_request_id = 1;
}

message CancelFindChatPartnerResponse {
    Result result = 1;
    enum Result {
        OK = 0;
        SESSION_ALREADY_CREATED = 1;
    }
}

message RateChatRequest {
    common.v2.ChatId chat_id = 1;
    common.matching.v2.ChatRating chat_rating = 2;
}

message RateChatResponse {
    Result result = 1;
    enum Result {
        OK = 0;
        NOT_FOUND = 1;
    }
}

message EndChatRequest {
    common.v2.ChatId chat_id = 1;
    bool skip_chat = 2;
}

message EndChatResponse {
    Result result = 1;
    enum Result {
        OK = 0;
    }
}

message DeleteChatRequest {
    common.v2.ChatId chat_id = 1;
}

message DeleteChatResponse {
    Result result = 1;
    enum Result {
        OK = 0;
    }
}

message GetRemainingAnonChatsRequest {
    
}

message GetRemainingAnonChatsResponse {
    Result result = 1;
    enum Result {
        OK = 0;
    }
    
    int32 remaining_chats = 2;
}

message InitiateFriendingRequest {
    common.v2.ChatId chat_id = 1;
}

message InitiateFriendingResponse {
    Result result = 1;
    enum Result {
        OK = 0;
    }
}

message GetUserChallengesStatsRequest {
    
}

message GetUserChallengesStatsResponse {
    int32 completed_daily_challenges = 1;
    int32 required_daily_challenges = 2;
    common.kin.payment.v2.KinAmount daily_earn_kin_amount = 3;
}

message GetInterestListRequest {
    
}

message GetInterestListResponse {
    Result result = 1;
    enum Result {
        OK = 0;
    }
    
    repeated common.matching.v2.AnonMatchInterest interests = 2;
}

message GetUserConfigRequest {
    
}

message GetUserConfigResponse {
    Result result = 1;
    enum Result {
        OK = 0;
    }
    
    WelcomeTutorialCompleted welcome_tutorial_completed = 2;
    AddFriendTutorialCompleted add_friend_tutorial_completed = 3;
    KinRewardTutorialCompleted kin_reward_tutorial_completed = 4;
    ProfileToolTipShown profile_tool_tip_shown = 5;
    ProfileAvatarDrawerShown profile_avatar_drawer_shown = 6;
}

message SetUserConfigRequest {
    WelcomeTutorialCompleted welcome_tutorial_completed = 1;
    AddFriendTutorialCompleted add_friend_tutorial_completed = 2;
    KinRewardTutorialCompleted kin_reward_tutorial_completed = 3;
    ProfileToolTipShown profile_tool_tip_shown = 4;
    ProfileAvatarDrawerShown profile_avatar_drawer_shown = 5;
}

message SetUserConfigResponse {
    Result result = 1;
    enum Result {
        OK = 0;
    }
}

message WelcomeTutorialCompleted {
    bool value = 1;
}

message AddFriendTutorialCompleted {
    bool value = 1;
}

message KinRewardTutorialCompleted {
    bool value = 1;
}

message ProfileToolTipShown {
    bool value = 1;
}

message ProfileAvatarDrawerShown {
    bool value = 1;
}
